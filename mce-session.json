{"version":1,"snapshots":[{"scroll":0,"name":"src\/scenes\/example.tsx","content":"import { makeScene2D } from '@motion-canvas\/2d';\nimport { createRef } from '@motion-canvas\/core';\nimport { Editor } from '@sysraccoon\/motion-canvas-editor';\n\nexport default makeScene2D(function*(view) {\n  const editor = createRef<Editor>();\n});"},{"scroll":0,"name":"src\/global.css","content":""},{"scroll":0,"name":"src\/global.css","content":"@import url('https:\/\/fonts.googleapis.com\/css2?family=Source+Code+Pro:ital,wght@0,200..900;1,200..900&display=swap');"},{"scroll":0,"name":"src\/project.ts","content":"import {makeProject} from '@motion-canvas\/core';\n\nimport example from '.\/scenes\/example?scene';\n\nexport default makeProject({\n  scenes: [example],\n});"},{"scroll":0,"name":"src\/project.ts","content":"import {makeProject} from '@motion-canvas\/core';\n\nimport '.\/global.css';\n\nimport example from '.\/scenes\/example?scene';\n\nexport default makeProject({\n  scenes: [example],\n});"},{"scroll":0,"name":"src\/scenes\/example.tsx","content":"import { makeScene2D } from '@motion-canvas\/2d';\nimport { createRef } from '@motion-canvas\/core';\nimport { Editor } from '@sysraccoon\/motion-canvas-editor';\n\nexport default makeScene2D(function*(view) {\n  const editor = createRef<Editor>();\n});"},{"scroll":0,"name":"src\/scenes\/example.tsx","content":"import { makeScene2D } from '@motion-canvas\/2d';\nimport { createRef } from '@motion-canvas\/core';\nimport { Editor } from '@sysraccoon\/motion-canvas-editor';\n\nexport default makeScene2D(function*(view) {\n  const editor = createRef<Editor>();\n  view.add(\n    <Editor\n      ref={editor}\n      viewportProps={{\n        maxWidth: 1440,\n        maxHeight: 870,\n      }}\n      fontFamily={'Source Code Pro'}\n      fontSize={30}\n    \/>\n  );\n});"},{"scroll":0,"name":"src\/scenes\/example.tsx","content":"import { makeScene2D } from '@motion-canvas\/2d';\nimport { createRef } from '@motion-canvas\/core';\nimport { Editor } from '@sysraccoon\/motion-canvas-editor';\nimport editorSession from '..\/..\/mce-session.json';\n\nexport default makeScene2D(function*(view) {\n  const editor = createRef<Editor>();\n  view.add(\n    <Editor\n      ref={editor}\n      viewportProps={{\n        maxWidth: 1440,\n        maxHeight: 870,\n      }}\n      fontFamily={'Source Code Pro'}\n      fontSize={30}\n    \/>\n  );\n});"},{"scroll":0,"name":"src\/scenes\/example.tsx","content":"import { Code, makeScene2D } from '@motion-canvas\/2d';\nimport { createRef } from '@motion-canvas\/core';\nimport { Editor, NeoVimSession, parseNeoVimSession } from '@sysraccoon\/motion-canvas-editor';\nimport editorSession from '..\/..\/mce-session.json';\n\nexport default makeScene2D(function*(view) {\n  const editor = createRef<Editor>();\n  view.add(\n    <Editor\n      ref={editor}\n      viewportProps={{\n        maxWidth: 1440,\n        maxHeight: 870,\n      }}\n      fontFamily={'Source Code Pro'}\n      fontSize={30}\n    \/>\n  );\n});"},{"scroll":0,"name":"src\/scenes\/example.tsx","content":"import { Code, makeScene2D } from '@motion-canvas\/2d';\nimport { createRef } from '@motion-canvas\/core';\nimport { Editor, NeoVimSession, parseNeoVimSession } from '@sysraccoon\/motion-canvas-editor';\nimport editorSession from '..\/..\/mce-session.json';\n\nexport default makeScene2D(function*(view) {\n  const snapshots = parseNeoVimSession(\n    editorSession as NeoVimSession,\n    (_name, _content) => Code.defaultHighlighter,\n  );\n\n  const editor = createRef<Editor>();\n  view.add(\n    <Editor\n      ref={editor}\n      viewportProps={{\n        maxWidth: 1440,\n        maxHeight: 870,\n      }}\n      fontFamily={'Source Code Pro'}\n      fontSize={30}\n    \/>\n  );\n});"},{"scroll":0,"name":"src\/scenes\/example.tsx","content":"import { Code, makeScene2D } from '@motion-canvas\/2d';\nimport { createRef, waitFor } from '@motion-canvas\/core';\nimport { Editor, NeoVimSession, parseNeoVimSession } from '@sysraccoon\/motion-canvas-editor';\nimport editorSession from '..\/..\/mce-session.json';\n\nexport default makeScene2D(function*(view) {\n  const snapshots = parseNeoVimSession(\n    editorSession as NeoVimSession,\n    (_name, _content) => Code.defaultHighlighter,\n  );\n\n  const editor = createRef<Editor>();\n  view.add(\n    <Editor\n      ref={editor}\n      editSnapshot={snapshots[0]}\n      viewportProps={{\n        maxWidth: 1440,\n        maxHeight: 870,\n      }}\n      fontFamily={'Source Code Pro'}\n      fontSize={30}\n    \/>\n  );\n});"},{"scroll":0,"name":"src\/scenes\/example.tsx","content":"import { Code, makeScene2D } from '@motion-canvas\/2d';\nimport { createRef, waitFor } from '@motion-canvas\/core';\nimport { Editor, NeoVimSession, parseNeoVimSession } from '@sysraccoon\/motion-canvas-editor';\nimport editorSession from '..\/..\/mce-session.json';\n\nexport default makeScene2D(function*(view) {\n  const snapshots = parseNeoVimSession(\n    editorSession as NeoVimSession,\n    (_name, _content) => Code.defaultHighlighter,\n  );\n\n  const editor = createRef<Editor>();\n  view.add(\n    <Editor\n      ref={editor}\n      editSnapshot={snapshots[0]}\n      viewportProps={{\n        maxWidth: 1440,\n        maxHeight: 870,\n      }}\n      fontFamily={'Source Code Pro'}\n      fontSize={30}\n    \/>\n  );\n\n  for (let snapshot of snapshots) {\n    yield* editor().tweenEditSnapshot(snapshot, 0.5);\n    yield* waitFor(0.5);\n  }\n});"},{"scroll":6,"name":"src\/scenes\/example.tsx","content":"import { Code, makeScene2D } from '@motion-canvas\/2d';\nimport { createRef, waitFor } from '@motion-canvas\/core';\nimport { Editor, NeoVimSession, parseNeoVimSession } from '@sysraccoon\/motion-canvas-editor';\nimport editorSession from '..\/..\/mce-session.json';\n\nexport default makeScene2D(function*(view) {\n  const snapshots = parseNeoVimSession(\n    editorSession as NeoVimSession,\n    (_name, _content) => Code.defaultHighlighter,\n  );\n\n  const editor = createRef<Editor>();\n  view.add(\n    <Editor\n      ref={editor}\n      editSnapshot={snapshots[0]}\n      viewportProps={{\n        maxWidth: 1440,\n        maxHeight: 870,\n      }}\n      fontFamily={'Source Code Pro'}\n      fontSize={30}\n    \/>\n  );\n\n  for (let snapshot of snapshots) {\n    yield* editor().tweenEditSnapshot(snapshot, 0.5);\n    yield* waitFor(0.5);\n  }\n});"},{"scroll":0,"name":"src\/scenes\/example.tsx","content":"import { Code, makeScene2D } from '@motion-canvas\/2d';\nimport { createRef, waitFor } from '@motion-canvas\/core';\nimport { Editor, NeoVimSession, parseNeoVimSession } from '@sysraccoon\/motion-canvas-editor';\nimport editorSession from '..\/..\/mce-session.json';\n\nexport default makeScene2D(function*(view) {\n  const snapshots = parseNeoVimSession(\n    editorSession as NeoVimSession,\n    (_name, _content) => Code.defaultHighlighter,\n  );\n\n  const editor = createRef<Editor>();\n  view.add(\n    <Editor\n      ref={editor}\n      editSnapshot={snapshots[0]}\n      viewportProps={{\n        maxWidth: 1440,\n        maxHeight: 870,\n      }}\n      fontFamily={'Source Code Pro'}\n      fontSize={30}\n    \/>\n  );\n\n  for (let snapshot of snapshots) {\n    yield* editor().tweenEditSnapshot(snapshot, 0.5);\n    yield* waitFor(0.5);\n  }\n});"},{"scroll":0,"name":"src\/scenes\/example.tsx","content":"import { Code, LezerHighlighter, makeScene2D } from '@motion-canvas\/2d';\nimport { createRef, waitFor } from '@motion-canvas\/core';\nimport { Editor, NeoVimSession, parseNeoVimSession } from '@sysraccoon\/motion-canvas-editor';\nimport { parser as jsParser } from '@lezer\/javascript';\nimport editorSession from '..\/..\/mce-session.json';\n\nexport default makeScene2D(function*(view) {\n  const snapshots = parseNeoVimSession(\n    editorSession as NeoVimSession,\n    (_name, _content) => Code.defaultHighlighter,\n  );\n\n  const editor = createRef<Editor>();\n  view.add(\n    <Editor\n      ref={editor}\n      editSnapshot={snapshots[0]}\n      viewportProps={{\n        maxWidth: 1440,\n        maxHeight: 870,\n      }}\n      fontFamily={'Source Code Pro'}\n      fontSize={30}\n    \/>\n  );\n\n  for (let snapshot of snapshots) {\n    yield* editor().tweenEditSnapshot(snapshot, 0.5);\n    yield* waitFor(0.5);\n  }\n});"},{"scroll":0,"name":"src\/scenes\/example.tsx","content":"import { Code, LezerHighlighter, makeScene2D } from '@motion-canvas\/2d';\nimport { createRef, waitFor } from '@motion-canvas\/core';\nimport { Editor, NeoVimSession, parseNeoVimSession } from '@sysraccoon\/motion-canvas-editor';\nimport { parser as jsParser } from '@lezer\/javascript';\nimport { parser as cssParser } from '@lezer\/css';\nimport editorSession from '..\/..\/mce-session.json';\n\nexport default makeScene2D(function*(view) {\n  const snapshots = parseNeoVimSession(\n    editorSession as NeoVimSession,\n    (_name, _content) => Code.defaultHighlighter,\n  );\n\n  const editor = createRef<Editor>();\n  view.add(\n    <Editor\n      ref={editor}\n      editSnapshot={snapshots[0]}\n      viewportProps={{\n        maxWidth: 1440,\n        maxHeight: 870,\n      }}\n      fontFamily={'Source Code Pro'}\n      fontSize={30}\n    \/>\n  );\n\n  for (let snapshot of snapshots) {\n    yield* editor().tweenEditSnapshot(snapshot, 0.5);\n    yield* waitFor(0.5);\n  }\n});"},{"scroll":0,"name":"src\/scenes\/example.tsx","content":"import { Code, LezerHighlighter, makeScene2D } from '@motion-canvas\/2d';\nimport { createRef, waitFor } from '@motion-canvas\/core';\nimport { Editor, NeoVimSession, parseNeoVimSession } from '@sysraccoon\/motion-canvas-editor';\nimport { parser as jsParser } from '@lezer\/javascript';\nimport { parser as cssParser } from '@lezer\/css';\nimport editorSession from '..\/..\/mce-session.json';\n\nconst tsHighlighter = new LezerHighlighter(\n  jsParser.configure({\n    dialect: 'jsx ts',\n  }),\n);\n\nexport default makeScene2D(function*(view) {\n  const snapshots = parseNeoVimSession(\n    editorSession as NeoVimSession,\n    (_name, _content) => Code.defaultHighlighter,\n  );\n\n  const editor = createRef<Editor>();\n  view.add(\n    <Editor\n      ref={editor}\n      editSnapshot={snapshots[0]}\n      viewportProps={{\n        maxWidth: 1440,\n        maxHeight: 870,\n      }}\n      fontFamily={'Source Code Pro'}\n      fontSize={30}\n    \/>\n  );\n\n  for (let snapshot of snapshots) {\n    yield* editor().tweenEditSnapshot(snapshot, 0.5);\n    yield* waitFor(0.5);\n  }\n});"},{"scroll":0,"name":"src\/scenes\/example.tsx","content":"import { Code, LezerHighlighter, makeScene2D } from '@motion-canvas\/2d';\nimport { createRef, waitFor } from '@motion-canvas\/core';\nimport { Editor, NeoVimSession, parseNeoVimSession } from '@sysraccoon\/motion-canvas-editor';\nimport { parser as jsParser } from '@lezer\/javascript';\nimport { parser as cssParser } from '@lezer\/css';\nimport editorSession from '..\/..\/mce-session.json';\n\nconst tsHighlighter = new LezerHighlighter(\n  jsParser.configure({\n    dialect: 'jsx ts',\n  }),\n);\n\nconst cssHighlighter = new LezerHighlighter(cssParser);\n\nexport default makeScene2D(function*(view) {\n  const snapshots = parseNeoVimSession(\n    editorSession as NeoVimSession,\n    (_name, _content) => Code.defaultHighlighter,\n  );\n\n  const editor = createRef<Editor>();\n  view.add(\n    <Editor\n      ref={editor}\n      editSnapshot={snapshots[0]}\n      viewportProps={{\n        maxWidth: 1440,\n        maxHeight: 870,\n      }}\n      fontFamily={'Source Code Pro'}\n      fontSize={30}\n    \/>\n  );\n\n  for (let snapshot of snapshots) {\n    yield* editor().tweenEditSnapshot(snapshot, 0.5);\n    yield* waitFor(0.5);\n  }\n});"},{"scroll":15,"name":"src\/scenes\/example.tsx","content":"import { Code, LezerHighlighter, makeScene2D } from '@motion-canvas\/2d';\nimport { createRef, waitFor } from '@motion-canvas\/core';\nimport { Editor, NeoVimSession, parseNeoVimSession } from '@sysraccoon\/motion-canvas-editor';\nimport { parser as jsParser } from '@lezer\/javascript';\nimport { parser as cssParser } from '@lezer\/css';\nimport editorSession from '..\/..\/mce-session.json';\n\nconst tsHighlighter = new LezerHighlighter(\n  jsParser.configure({\n    dialect: 'jsx ts',\n  }),\n);\n\nconst cssHighlighter = new LezerHighlighter(cssParser);\n\nexport default makeScene2D(function*(view) {\n  const snapshots = parseNeoVimSession(\n    editorSession as NeoVimSession,\n    (_name, _content) => Code.defaultHighlighter,\n  );\n\n  const editor = createRef<Editor>();\n  view.add(\n    <Editor\n      ref={editor}\n      editSnapshot={snapshots[0]}\n      viewportProps={{\n        maxWidth: 1440,\n        maxHeight: 870,\n      }}\n      fontFamily={'Source Code Pro'}\n      fontSize={30}\n    \/>\n  );\n\n  for (let snapshot of snapshots) {\n    yield* editor().tweenEditSnapshot(snapshot, 0.5);\n    yield* waitFor(0.5);\n  }\n});"},{"scroll":15,"selection":{"end_row":19,"start_col":0,"start_row":16,"end_col":2147483647},"name":"src\/scenes\/example.tsx","content":"import { Code, LezerHighlighter, makeScene2D } from '@motion-canvas\/2d';\nimport { createRef, waitFor } from '@motion-canvas\/core';\nimport { Editor, NeoVimSession, parseNeoVimSession } from '@sysraccoon\/motion-canvas-editor';\nimport { parser as jsParser } from '@lezer\/javascript';\nimport { parser as cssParser } from '@lezer\/css';\nimport editorSession from '..\/..\/mce-session.json';\n\nconst tsHighlighter = new LezerHighlighter(\n  jsParser.configure({\n    dialect: 'jsx ts',\n  }),\n);\n\nconst cssHighlighter = new LezerHighlighter(cssParser);\n\nexport default makeScene2D(function*(view) {\n  const snapshots = parseNeoVimSession(\n    editorSession as NeoVimSession,\n    (_name, _content) => Code.defaultHighlighter,\n  );\n\n  const editor = createRef<Editor>();\n  view.add(\n    <Editor\n      ref={editor}\n      editSnapshot={snapshots[0]}\n      viewportProps={{\n        maxWidth: 1440,\n        maxHeight: 870,\n      }}\n      fontFamily={'Source Code Pro'}\n      fontSize={30}\n    \/>\n  );\n\n  for (let snapshot of snapshots) {\n    yield* editor().tweenEditSnapshot(snapshot, 0.5);\n    yield* waitFor(0.5);\n  }\n});"},{"scroll":15,"selection":{"end_row":21,"start_col":0,"start_row":16,"end_col":2147483647},"name":"src\/scenes\/example.tsx","content":"import { Code, LezerHighlighter, makeScene2D } from '@motion-canvas\/2d';\nimport { createRef, waitFor } from '@motion-canvas\/core';\nimport { Editor, NeoVimSession, parseNeoVimSession } from '@sysraccoon\/motion-canvas-editor';\nimport { parser as jsParser } from '@lezer\/javascript';\nimport { parser as cssParser } from '@lezer\/css';\nimport editorSession from '..\/..\/mce-session.json';\n\nconst tsHighlighter = new LezerHighlighter(\n  jsParser.configure({\n    dialect: 'jsx ts',\n  }),\n);\n\nconst cssHighlighter = new LezerHighlighter(cssParser);\n\nexport default makeScene2D(function*(view) {\n  const snapshots = parseNeoVimSession(\n    editorSession as NeoVimSession,\n    (_name, _content) => {\n      return Code.defaultHighlighter;\n    },\n  );\n\n  const editor = createRef<Editor>();\n  view.add(\n    <Editor\n      ref={editor}\n      editSnapshot={snapshots[0]}\n      viewportProps={{\n        maxWidth: 1440,\n        maxHeight: 870,\n      }}\n      fontFamily={'Source Code Pro'}\n      fontSize={30}\n    \/>\n  );\n\n  for (let snapshot of snapshots) {\n    yield* editor().tweenEditSnapshot(snapshot, 0.5);\n    yield* waitFor(0.5);\n  }\n});"},{"scroll":15,"selection":{"end_row":21,"start_col":0,"start_row":16,"end_col":2147483647},"name":"src\/scenes\/example.tsx","content":"import { Code, LezerHighlighter, makeScene2D } from '@motion-canvas\/2d';\nimport { createRef, waitFor } from '@motion-canvas\/core';\nimport { Editor, NeoVimSession, parseNeoVimSession } from '@sysraccoon\/motion-canvas-editor';\nimport { parser as jsParser } from '@lezer\/javascript';\nimport { parser as cssParser } from '@lezer\/css';\nimport editorSession from '..\/..\/mce-session.json';\n\nconst tsHighlighter = new LezerHighlighter(\n  jsParser.configure({\n    dialect: 'jsx ts',\n  }),\n);\n\nconst cssHighlighter = new LezerHighlighter(cssParser);\n\nexport default makeScene2D(function*(view) {\n  const snapshots = parseNeoVimSession(\n    editorSession as NeoVimSession,\n    (name, _content) => {\n      return Code.defaultHighlighter;\n    },\n  );\n\n  const editor = createRef<Editor>();\n  view.add(\n    <Editor\n      ref={editor}\n      editSnapshot={snapshots[0]}\n      viewportProps={{\n        maxWidth: 1440,\n        maxHeight: 870,\n      }}\n      fontFamily={'Source Code Pro'}\n      fontSize={30}\n    \/>\n  );\n\n  for (let snapshot of snapshots) {\n    yield* editor().tweenEditSnapshot(snapshot, 0.5);\n    yield* waitFor(0.5);\n  }\n});"},{"scroll":15,"selection":{"end_row":24,"start_col":0,"start_row":16,"end_col":2147483647},"name":"src\/scenes\/example.tsx","content":"import { Code, LezerHighlighter, makeScene2D } from '@motion-canvas\/2d';\nimport { createRef, waitFor } from '@motion-canvas\/core';\nimport { Editor, NeoVimSession, parseNeoVimSession } from '@sysraccoon\/motion-canvas-editor';\nimport { parser as jsParser } from '@lezer\/javascript';\nimport { parser as cssParser } from '@lezer\/css';\nimport editorSession from '..\/..\/mce-session.json';\n\nconst tsHighlighter = new LezerHighlighter(\n  jsParser.configure({\n    dialect: 'jsx ts',\n  }),\n);\n\nconst cssHighlighter = new LezerHighlighter(cssParser);\n\nexport default makeScene2D(function*(view) {\n  const snapshots = parseNeoVimSession(\n    editorSession as NeoVimSession,\n    (name, _content) => {\n      if (name.endsWith('.css')) {\n        return cssHighlighter;\n      }\n      return Code.defaultHighlighter;\n    },\n  );\n\n  const editor = createRef<Editor>();\n  view.add(\n    <Editor\n      ref={editor}\n      editSnapshot={snapshots[0]}\n      viewportProps={{\n        maxWidth: 1440,\n        maxHeight: 870,\n      }}\n      fontFamily={'Source Code Pro'}\n      fontSize={30}\n    \/>\n  );\n\n  for (let snapshot of snapshots) {\n    yield* editor().tweenEditSnapshot(snapshot, 0.5);\n    yield* waitFor(0.5);\n  }\n});"},{"scroll":15,"selection":{"end_row":29,"start_col":0,"start_row":16,"end_col":2147483647},"name":"src\/scenes\/example.tsx","content":"import { Code, LezerHighlighter, makeScene2D } from '@motion-canvas\/2d';\nimport { createRef, waitFor } from '@motion-canvas\/core';\nimport { Editor, NeoVimSession, parseNeoVimSession } from '@sysraccoon\/motion-canvas-editor';\nimport { parser as jsParser } from '@lezer\/javascript';\nimport { parser as cssParser } from '@lezer\/css';\nimport editorSession from '..\/..\/mce-session.json';\n\nconst tsHighlighter = new LezerHighlighter(\n  jsParser.configure({\n    dialect: 'jsx ts',\n  }),\n);\n\nconst cssHighlighter = new LezerHighlighter(cssParser);\n\nexport default makeScene2D(function*(view) {\n  const snapshots = parseNeoVimSession(\n    editorSession as NeoVimSession,\n    (name, _content) => {\n      if (name.endsWith('.css')) {\n        return cssHighlighter;\n      }\n\n      if (name.endsWith('.ts') || name.endsWith('.tsx')) {\n        return tsHighlighter;\n      }\n\n      return Code.defaultHighlighter;\n    },\n  );\n\n  const editor = createRef<Editor>();\n  view.add(\n    <Editor\n      ref={editor}\n      editSnapshot={snapshots[0]}\n      viewportProps={{\n        maxWidth: 1440,\n        maxHeight: 870,\n      }}\n      fontFamily={'Source Code Pro'}\n      fontSize={30}\n    \/>\n  );\n\n  for (let snapshot of snapshots) {\n    yield* editor().tweenEditSnapshot(snapshot, 0.5);\n    yield* waitFor(0.5);\n  }\n});"},{"scroll":31,"name":"src\/scenes\/example.tsx","content":"import { Code, LezerHighlighter, makeScene2D } from '@motion-canvas\/2d';\nimport { createRef, waitFor } from '@motion-canvas\/core';\nimport { Editor, NeoVimSession, parseNeoVimSession } from '@sysraccoon\/motion-canvas-editor';\nimport { parser as jsParser } from '@lezer\/javascript';\nimport { parser as cssParser } from '@lezer\/css';\nimport editorSession from '..\/..\/mce-session.json';\n\nconst tsHighlighter = new LezerHighlighter(\n  jsParser.configure({\n    dialect: 'jsx ts',\n  }),\n);\n\nconst cssHighlighter = new LezerHighlighter(cssParser);\n\nexport default makeScene2D(function*(view) {\n  const snapshots = parseNeoVimSession(\n    editorSession as NeoVimSession,\n    (name, _content) => {\n      if (name.endsWith('.css')) {\n        return cssHighlighter;\n      }\n\n      if (name.endsWith('.ts') || name.endsWith('.tsx')) {\n        return tsHighlighter;\n      }\n\n      return Code.defaultHighlighter;\n    },\n  );\n\n  const editor = createRef<Editor>();\n  view.add(\n    <Editor\n      ref={editor}\n      editSnapshot={snapshots[0]}\n      viewportProps={{\n        maxWidth: 1440,\n        maxHeight: 870,\n      }}\n      fontFamily={'Source Code Pro'}\n      fontSize={30}\n    \/>\n  );\n\n  for (let snapshot of snapshots) {\n    yield* editor().tweenEditSnapshot(snapshot, 0.5);\n    yield* waitFor(0.5);\n  }\n});"},{"scroll":31,"name":"src\/scenes\/example.tsx","content":"import { Code, LezerHighlighter, makeScene2D } from '@motion-canvas\/2d';\nimport { createRef, waitFor } from '@motion-canvas\/core';\nimport { Editor, NeoVimSession, parseNeoVimSession } from '@sysraccoon\/motion-canvas-editor';\nimport { parser as jsParser } from '@lezer\/javascript';\nimport { parser as cssParser } from '@lezer\/css';\nimport editorSession from '..\/..\/mce-session.json';\n\nconst tsHighlighter = new LezerHighlighter(\n  jsParser.configure({\n    dialect: 'jsx ts',\n  }),\n);\n\nconst cssHighlighter = new LezerHighlighter(cssParser);\n\nexport default makeScene2D(function*(view) {\n  const snapshots = parseNeoVimSession(\n    editorSession as NeoVimSession,\n    (name, _content) => {\n      if (name.endsWith('.css')) {\n        return cssHighlighter;\n      }\n\n      if (name.endsWith('.ts') || name.endsWith('.tsx')) {\n        return tsHighlighter;\n      }\n\n      return Code.defaultHighlighter;\n    },\n  );\n\n  const editor = createRef<Editor>();\n  view.add(\n    <Editor\n      ref={editor}\n      editSnapshot={snapshots[0]}\n      viewportProps={{\n        maxWidth: 1440,\n        maxHeight: 870,\n      }}\n      fontFamily={'Source Code Pro'}\n      fontSize={30}\n    \/>\n  );\n\n  for (let snapshot of snapshots) {\n    yield* editor().tweenEditSnapshot(snapshot, 0.5);\n    yield* waitFor(0.5);\n  }\n\n  yield* waitFor(2);\n});"}]}
